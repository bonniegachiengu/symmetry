# Generated by Django 5.1 on 2024-09-26 19:49

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Particle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "mass",
                    models.FloatField(
                        help_text="Mass in MeV/c^2",
                        validators=[django.core.validators.MinValueValidator(0.0)],
                    ),
                ),
                (
                    "charge",
                    models.FloatField(
                        choices=[
                            (-1, "-1 (Negative)"),
                            (-0.6666666666666666, "-2/3"),
                            (-0.3333333333333333, "-1/3"),
                            (0, "0 (Neutral)"),
                            (0.3333333333333333, "1/3"),
                            (0.6666666666666666, "2/3"),
                            (1, "+1 (Positive)"),
                        ]
                    ),
                ),
                ("spin", models.CharField(max_length=10)),
                (
                    "lifetime",
                    models.FloatField(
                        help_text="Lifetime in seconds",
                        validators=[django.core.validators.MinValueValidator(0.0)],
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DecayMode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "branching_ratio",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ]
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="decay_modes",
                        to="particles.particle",
                    ),
                ),
                (
                    "products",
                    models.ManyToManyField(
                        related_name="product_of", to="particles.particle"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Interaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                (
                    "force",
                    models.CharField(
                        choices=[
                            ("strong", "Strong Nuclear"),
                            ("weak", "Weak Nuclear"),
                            ("electromagnetic", "Electromagnetic"),
                        ],
                        max_length=50,
                    ),
                ),
                ("coupling_constant", models.FloatField(blank=True, null=True)),
                (
                    "conservation_rules",
                    models.TextField(
                        help_text="Describe what quantities are conserved in this interaction"
                    ),
                ),
                (
                    "particles",
                    models.ManyToManyField(
                        related_name="interactions", to="particles.particle"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EParticle",
            fields=[
                (
                    "particle_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="particles.particle",
                    ),
                ),
                (
                    "particle_type",
                    models.CharField(
                        choices=[
                            ("quark", "Quark"),
                            ("lepton", "Lepton"),
                            ("gauge_boson", "Gauge Boson"),
                            ("scalar_boson", "Scalar Boson"),
                        ],
                        max_length=20,
                    ),
                ),
                ("is_antiparticle", models.BooleanField(default=False)),
                ("lepton_number", models.IntegerField(default=0)),
                ("baryon_number", models.FloatField(default=0)),
                ("isospin", models.FloatField(blank=True, null=True)),
                ("strangeness", models.IntegerField(default=0)),
                ("charm", models.IntegerField(default=0)),
                ("bottomness", models.IntegerField(default=0)),
                ("topness", models.IntegerField(default=0)),
                (
                    "antiparticle",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="antiparticle_of",
                        to="particles.eparticle",
                    ),
                ),
            ],
            bases=("particles.particle",),
        ),
        migrations.CreateModel(
            name="CParticle",
            fields=[
                (
                    "particle_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="particles.particle",
                    ),
                ),
                ("total_isospin", models.FloatField(blank=True, null=True)),
                ("total_angular_momentum", models.FloatField(blank=True, null=True)),
                (
                    "parity",
                    models.IntegerField(
                        blank=True, choices=[(1, "+1"), (-1, "-1")], null=True
                    ),
                ),
                (
                    "constituents",
                    models.ManyToManyField(
                        related_name="composite_particles", to="particles.eparticle"
                    ),
                ),
            ],
            options={
                "verbose_name": "Composite Particle",
                "verbose_name_plural": "Composite Particles",
            },
            bases=("particles.particle",),
        ),
    ]
